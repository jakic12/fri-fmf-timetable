{"version":3,"sources":["util/exportToIcs.js","util/tableDataUtil.js","util/colorSchemes.js","components/LoadingScreen.jsx","components/FullscreenError.jsx","components/LessonFilterHandler.jsx","components/CustomTimetable.jsx","components/Dropdown.jsx","components/ColorSchemeHandler.jsx","components/TopExpandableBar.jsx","App.js","util/api.js","serviceWorker.js","index.js"],"names":["padTo2","num","slice","apiToTimetableData","apiData","compact","tableDataConverted","monday","tuesday","wednesday","thursday","friday","DAYS","elementCount","forEach","d","lectures","el","indexOf","predmet","abbr","push","dan","id","name","professor","profesor","color","class","ucilnica","type","tip","lectureId","startTime","moment","ura","endTime","trajanje","hidden","getTimeRange","apiDataTable","smallestRange","range","Math","min","max","concatAbbrAndType","delimiter","toUpperCase","isInFilter","lessonFilter","markHiddenApiData","selecting","map","e","show","string","split","predmetName","predmetType","isPredmetEqualToIDString","length","Object","assign","colors","default","topBar","sideBar","backgroundColor","backgroundAccentColor","tableTextColor","cardTextColor","cardColors","cardBackground","horror","monokaiPro","cardBorder","cardBorderRadius","cardTypeTextColor","monokaiProWithColorText","importStyle","darkerMode","cardTypeBackground","JSON","parse","localStorage","getItem","ColorContext","React","createContext","LoadingDiv","styled","div","props","loaded","SideLoading","TopLoading","rowHeight","error","useContext","ErrorWrapper","ErrorCard","background","LessonFilterManager","setLessonFilter","console","log","setSelecting","LessonFilterData","filter","Component","useState","setFilter","Provider","value","newFilter","new1","setItem","stringify","n","useColorProp","replace","StyledLecture","lectureColor","StyledLectureBody","StyledLectureType","out","LightenDarkenColor","StyledLectureWrapper","css","SmallField","CardTitle","TimetableStyle","createGlobalStyle","timeInterval","tableData","lessonFilterData","lessonFilterManager","hoursInterval","renderEvent","s","event","defaultAttributes","styles","className","selectedName","selectedType","title","key","onClick","a","style","fontWeight","window","innerWidth","format","events","MainButtonWrapper","MainInnerButtonWrapper","ShadowWrapper","open","DropdownBody","height","DropdownInnerList","childOf","c","p","parentNode","ButtonElement","ListElement","onSelect","values","dropDownInnerListStyle","onOpen","setOpen","dropDownBodyRef","useRef","mainButtonWrapperRef","dropdownInnerListRef","closeDropdown","target","current","document","removeEventListener","addEventListener","ref","marginTop","offsetHeight","index","element","handleImports","scheme","import1","colorSchemes","Error","ColorSchemeChangerContext","allNames","colorSchemeName","setColorScheme","setColorSchemePreview","resetColorSchemePreview","setColorSchemeName","tempSchemeName","setTempSchemeName","keys","save","TopMenuBar","expanded","TopMenuBarContent","ExpandButton","DropdownButton","DropDownElement","duplicateLectures","setExpanded","colorSchemeChanger","topMenuColor","buttons","Dropdown","marginLeft","onMouseEnter","onMouseLeave","elem","f","topButtons","icon","HiDownload","Wrapper","getRowHeight","numberOfRows","round","App","tableDataAndInterval","setTableDataAndInterval","setError","timetableData","setTimetableData","duplicates","setDuplicates","useEffect","fetchPromise","fetch","location","href","method","headers","then","response","ok","json","data","countByVajeLecture","predmetID","findDuplicateLectures","status","statusText","catch","toString","ReactGA","initialize","effect","dependencies","isInitialMount","useUpdateEffect","newData","filterApiData","LoadingScreen","FullscreenError","CustomTimetable","TopExpandableBar","Boolean","hostname","match","ReactDOM","render","StrictMode","LessonFilterHandler","ColorSchemeHandler","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.67ec6d4f.chunk.js","sourcesContent":["import ical from \"ical-generator\";\r\n\r\nexport default (data) => {\r\n  const cal = ical({ domain: \"github.com\", name: \"ISRM urnik\" });\r\n  return addEvents(cal, data).toString();\r\n};\r\n\r\nfunction getMonday(d) {\r\n  d = new Date(d);\r\n  var day = d.getDay(),\r\n    diff = d.getDate() - day + (day == 0 ? -6 : 1); // adjust when day is sunday\r\n  return new Date(d.setDate(diff)).setHours(0, 0, 0, 0);\r\n}\r\n\r\nfunction addDays(date1, days) {\r\n  var date = new Date(date1);\r\n  date.setDate(date.getDate() + days);\r\n  return date;\r\n}\r\n\r\nfunction addHours(date, h) {\r\n  const date1 = new Date(date);\r\n  date1.setTime(date1.getTime() + h * 60 * 60 * 1000);\r\n  return date1;\r\n}\r\n\r\nconst relativeTime = (date, dan, ura) => addHours(addDays(date, dan), ura);\r\n\r\nconst addEvents = (cal, data) => {\r\n  const startDate = getMonday(new Date());\r\n\r\n  data.forEach((element) => {\r\n    const event = cal.createEvent(\r\n      Object.assign(\r\n        {\r\n          start: relativeTime(startDate, element.dan, element.ura),\r\n          end: relativeTime(\r\n            startDate,\r\n            element.dan,\r\n            element.ura + element.trajanje\r\n          ),\r\n          summary: `${element.predmet.abbr} - ${element.tip}`,\r\n          description: `${element.predmet.name} @ ${element.ucilnica}\\\\n${element.profesor}`,\r\n          location: element.ucilnica,\r\n          timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\r\n        },\r\n        element.profesor\r\n          ? {\r\n              organizer: {\r\n                name: element.profesor + \"\",\r\n                email: `${(element.profesor + \"\").split(\" \")[0]}.${\r\n                  (element.profesor + \"\").split(\" \")[1]\r\n                }@fmf.uni-lj.si`,\r\n              },\r\n            }\r\n          : null\r\n      )\r\n    );\r\n\r\n    event.repeating({\r\n      freq: \"WEEKLY\",\r\n      until: addDays(relativeTime(startDate, element.dan, element.ura), 365),\r\n    });\r\n  });\r\n\r\n  return cal;\r\n};\r\n","import moment from \"moment\";\r\nimport exportToIcs from \"./exportToIcs\";\r\n\r\nconst padTo2 = (num) => (\"00\" + num).slice(-2);\r\n\r\n/**\r\n * convert api data to a format that the Timetable component can understand\r\n * @param {Object} apiData object of data, that was fetched from the api\r\n */\r\nexport const apiToTimetableData = (apiData, compact) => {\r\n  const tableDataConverted = {\r\n    monday: [],\r\n    tuesday: [],\r\n    wednesday: [],\r\n    thursday: [],\r\n    friday: [],\r\n  };\r\n\r\n  const DAYS = [\"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\"];\r\n\r\n  const elementCount = {};\r\n  DAYS.forEach((d) => (elementCount[d] = 1));\r\n\r\n  const lectures = [];\r\n  apiData.forEach((el) => {\r\n    if (lectures.indexOf(el.predmet.abbr) == -1) lectures.push(el.predmet.abbr);\r\n\r\n    tableDataConverted[DAYS[el.dan]].push({\r\n      id: elementCount[DAYS[el.dan]]++,\r\n      name: compact ? el.predmet.abbr : el.predmet.name,\r\n      professor: el.profesor,\r\n      color: el.predmet.color,\r\n      class: el.ucilnica,\r\n      type: el.tip,\r\n      lectureId: lectures.indexOf(el.predmet.abbr),\r\n      startTime: moment(\"2019-02-23T\" + padTo2(el.ura) + \":00:00\"),\r\n      endTime: moment(\r\n        \"2019-02-23T\" +\r\n          (\"00\" + padTo2(el.ura + el.trajanje)).slice(-2) +\r\n          \":00:00\"\r\n      ),\r\n      hidden: el.hidden,\r\n      abbr: el.predmet.abbr,\r\n      dan: el.dan,\r\n      ura: el.ura,\r\n    });\r\n  });\r\n\r\n  return tableDataConverted;\r\n};\r\n\r\nexport const getTimeRange = (apiDataTable, smallestRange = [8, 20]) => {\r\n  const range = [\r\n    Math.min(smallestRange[0], apiDataTable[0].ura),\r\n    Math.max(smallestRange[1], apiDataTable[0].ura + apiDataTable[0].trajanje),\r\n  ];\r\n\r\n  apiDataTable.forEach((el) => {\r\n    if (el.ura < range[0]) {\r\n      range[0] = el.ura;\r\n    }\r\n\r\n    if (el.ura + el.trajanje > range[1]) {\r\n      range[1] = el.ura + el.trajanje;\r\n    }\r\n  });\r\n\r\n  return range;\r\n};\r\n\r\nexport const downloadIcs = (apiDataTable) => {\r\n  const element = document.createElement(\"a\");\r\n  const file = new Blob([exportToIcs(apiDataTable)], {\r\n    type: \"text/plain;charset=utf-8\",\r\n  });\r\n  element.href = URL.createObjectURL(file);\r\n  element.download = \"calendar.ics\";\r\n  document.body.appendChild(element);\r\n  element.click();\r\n};\r\n\r\nexport const concatAbbrAndType = (predmet, delimiter = \"$\") => {\r\n  return (\r\n    predmet.predmet.abbr +\r\n    delimiter +\r\n    (predmet.tip.toUpperCase().indexOf(\"V\") == -1 ? \"P\" : \"V\")\r\n  );\r\n};\r\n\r\nexport const isPredmetEqualToIDString = (predmet, string) => {\r\n  const [predmetName, predmetType] = string.split(\"$\");\r\n  return (\r\n    predmetName === predmet.predmet.abbr &&\r\n    (predmet.tip || predmet.type).indexOf(predmetType) != -1\r\n  );\r\n};\r\n\r\n//Should have used: https://www.youtube.com/watch?v=pKO9UjSeLew\r\nexport const findDuplicateLectures = (apiDataTable) => {\r\n  const countByVajeLecture = {};\r\n  apiDataTable.forEach((element) => {\r\n    const predmetID = concatAbbrAndType(element);\r\n    if (predmetID in countByVajeLecture) {\r\n      if (\r\n        countByVajeLecture[predmetID].filter(\r\n          (e) => e.dan === element.dan && e.ura === element.ura\r\n        ).length === 0\r\n      ) {\r\n        countByVajeLecture[predmetID].push(element);\r\n      }\r\n    } else {\r\n      countByVajeLecture[predmetID] = [element];\r\n    }\r\n  });\r\n\r\n  const duplicateLectures = Object.keys(countByVajeLecture)\r\n    .map((key) => {\r\n      if (countByVajeLecture[key].length > 1) {\r\n        return key;\r\n      } else {\r\n        return 0;\r\n      }\r\n    })\r\n    .filter((e) => e != 0);\r\n\r\n  return duplicateLectures;\r\n};\r\n\r\nexport const isInFilter = (lessonFilter, predmet) => {\r\n  return (\r\n    !lessonFilter[concatAbbrAndType(predmet)] ||\r\n    (lessonFilter[concatAbbrAndType(predmet)].dan === predmet.dan &&\r\n      lessonFilter[concatAbbrAndType(predmet)].ura === predmet.ura)\r\n  );\r\n};\r\n\r\nexport const filterApiData = (apiData, lessonFilter, flip = false) =>\r\n  /*apiData.filter((e) => {\r\n    const out = flip ^ isInFilter(lessonFilter, e);\r\n    console.log(e, out);\r\n    return out;\r\n  });*/\r\n  markHiddenApiData(apiData, lessonFilter, false);\r\n\r\nexport const markHiddenApiData = (apiData, lessonFilter, selecting) =>\r\n  apiData.map((e) => {\r\n    const show =\r\n      (selecting &&\r\n        isPredmetEqualToIDString(e, selecting) &&\r\n        ((lessonFilter[selecting] || []).length == 0 ||\r\n          isInFilter(lessonFilter, e))) ||\r\n      (!selecting &&\r\n        (isInFilter(lessonFilter, e) || !lessonFilter[concatAbbrAndType(e)]));\r\n\r\n    return Object.assign(e, {\r\n      hidden: !show,\r\n    });\r\n  });\r\n","import React from \"react\";\r\n\r\nconst colors = {\r\n  default: {\r\n    topBar: `#34495e`,\r\n    sideBar: `#46596b`,\r\n    backgroundColor: `white`,\r\n    backgroundAccentColor: `rgba(0,0,0,.08)`,\r\n    tableTextColor: `white`,\r\n    cardTextColor: `white`,\r\n    cardColors: {\r\n      \"red\": \"#e74c3c\",\r\n      \"blue\": \"#3498db\",\r\n      \"purple\": \"#9b59b6\",\r\n      \"yellow\": \"#f1c40f\",\r\n      \"green\": \"#2ecc71\",\r\n      \"orange\": \"#e67e22\"\r\n    },\r\n    cardBackground: \"%COLOR%\",\r\n  },\r\n  horror: {\r\n    topBar: `red`,\r\n    sideBar: `green`,\r\n    backgroundColor: `yellow`,\r\n    backgroundAccentColor: `gray`,\r\n    tableTextColor: `black`,\r\n    cardTextColor: `black`,\r\n    cardColors: {\r\n      \"red\": \"#fff\",\r\n      \"orange\": \"#701\",\r\n      \"yellow\": \"#ab2\",\r\n      \"green\": \"#aaa\",\r\n      \"blue\": \"#faf\",\r\n      \"purple\": \"#222\"\r\n\t},\r\n    cardBackground: \"%COLOR%\",\r\n  },\r\n  monokaiPro: {\r\n    topBar: `#131313`,\r\n    sideBar: `#191919`,\r\n    backgroundColor: `#222222`,\r\n    backgroundAccentColor: `#2c2c2d`,\r\n    tableTextColor: `white`,\r\n    cardTextColor: `white`,\r\n    cardColors: {\r\n      \"red\": \"#ff6188\",\r\n      \"orange\": \"#fc9868\",\r\n      \"yellow\": \"#ffd866\",\r\n      \"green\": \"#a9de77\",\r\n      \"blue\": \"#78dce8\",\r\n      \"purple\": \"#ab9df2\"\r\n\t},\r\n    cardBorder: \"2px solid %COLOR%\", //optional,  all color card props, support %COLOR% except cardColors\r\n    cardBorderRadius: `3px`, // optional\r\n    cardBackground: \"#191919\",\r\n    cardTypeTextColor: `#222222`, // optional\r\n  },\r\n  monokaiProWithColorText: {\r\n    importStyle: `monokaiPro`,\r\n    cardTextColor: `%COLOR%`,\r\n  },\r\n  darkerMode: {\r\n    topBar: `black`,\r\n    sideBar: `black`,\r\n    backgroundColor: `black`,\r\n    backgroundAccentColor: `black`,\r\n    tableTextColor: `#aaaaaa`,\r\n    cardTextColor: `#aaaaaa`,\r\n    cardColors: [],\r\n    cardBackground: \"black\",\r\n    cardTypeTextColor: `#aaaaaa`,\r\n    cardTypeBackground: `black`,\r\n  },\r\n};\r\n\r\nexport default Object.assign(\r\n  colors,\r\n  JSON.parse(localStorage.getItem(\"customColorSchemes\") || \"{}\")\r\n);\r\nexport const ColorContext = React.createContext(colors.default);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { PuffLoader } from \"react-spinners\";\r\nimport { ColorContext } from \"../util/colorSchemes\";\r\n\r\nconst LoadingDiv = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  position: absolute;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: ${(props) => props.colors.backgroundColor};\r\n\r\n  opacity: ${(props) => (props.loaded ? 0 : 1)};\r\n  transition: all 0.2s;\r\n\r\n  z-index: 1000;\r\n\r\n  pointer-events: none;\r\n`;\r\n\r\nconst SideLoading = styled.div`\r\n  background: ${(props) => props.backgroundColor};\r\n  width: ${(props) => (props.loaded ? \"5rem\" : \"100vw\")};\r\n  /*transition: all 1s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  transition-delay: 1s;*/\r\n\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  height: 100vh;\r\n`;\r\n\r\nconst TopLoading = styled.div`\r\n  background: ${(props) => props.backgroundColor};\r\n  width: 100vw;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n\r\n  height: ${(props) => (props.loaded ? `${props.rowHeight}vh` : \"100vh\")};\r\n  /*transition: all 1s cubic-bezier(0.25, 0.8, 0.25, 1);*/\r\n`;\r\n\r\nexport default ({ loaded, error, rowHeight }) => {\r\n  const colors = React.useContext(ColorContext);\r\n  return (\r\n    <LoadingDiv loaded={loaded || !!error} colors={colors}>\r\n      <SideLoading\r\n        loaded={loaded}\r\n        backgroundColor={colors.sideBar}\r\n      ></SideLoading>\r\n      <TopLoading\r\n        loaded={loaded}\r\n        rowHeight={rowHeight}\r\n        backgroundColor={colors.topBar}\r\n      ></TopLoading>\r\n      {!loaded && <PuffLoader />}\r\n    </LoadingDiv>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ColorContext } from \"../util/colorSchemes\";\r\n\r\nconst ErrorWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ErrorCard = styled.div`\r\n  background: #e74c3c;\r\n  border-radius: 2px;\r\n  padding: 10px;\r\n`;\r\n\r\nexport default ({ error }) => {\r\n  const colors = React.useContext(ColorContext);\r\n  return (\r\n    <ErrorWrapper background={colors.topBar}>\r\n      <ErrorCard>{error}</ErrorCard>\r\n    </ErrorWrapper>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport const LessonFilterManager = React.createContext({\r\n  setLessonFilter: () => console.log(\"context not loaded yet\"),\r\n  setSelecting: () => console.log(\"context not loaded yet\"),\r\n});\r\n\r\nexport const LessonFilterData = React.createContext({\r\n  filter: {},\r\n  selecting: false,\r\n});\r\n\r\nconst filterObjKey = (obj, prop) =>\r\n  Object.keys(obj).reduce((object, key) => {\r\n    if (key !== prop) {\r\n      object[key] = obj[key];\r\n    }\r\n    return object;\r\n  }, {});\r\n\r\nexport default ({ Component }) => {\r\n  const [filter, setFilter] = useState(\r\n    JSON.parse(localStorage.getItem(\"lessonFilter\") || \"{}\")\r\n  );\r\n  const [selecting, setSelecting] = useState(false);\r\n\r\n  console.log(\"filter\", filter);\r\n  return (\r\n    <LessonFilterData.Provider\r\n      value={{\r\n        filter,\r\n        selecting,\r\n      }}\r\n    >\r\n      <LessonFilterManager.Provider\r\n        value={{\r\n          setLessonFilter: (newFilter) => {\r\n            const new1 = Object.assign({}, filter, newFilter);\r\n            localStorage.setItem(\"lessonFilter\", JSON.stringify(new1));\r\n            setFilter(new1);\r\n          },\r\n          setSelecting: (n) => {\r\n            //setFilter(filterObjKey(filter, n));\r\n            setSelecting(n);\r\n          },\r\n        }}\r\n      >\r\n        <Component lessonFilter={filter} />\r\n      </LessonFilterManager.Provider>\r\n    </LessonFilterData.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Timetable from \"react-timetable-events\";\r\nimport { LightenDarkenColor } from \"lighten-darken-color\";\r\nimport styled, { createGlobalStyle, css } from \"styled-components\";\r\nimport { ColorContext } from \"../util/colorSchemes\";\r\nimport \"../App.css\";\r\n\r\nimport { LessonFilterData, LessonFilterManager } from \"./LessonFilterHandler\";\r\n\r\nconst useColorProp = (string, color) => string.replace(\"%COLOR%\", color);\r\n\r\nconst StyledLecture = styled.div`\r\n  width: 100%;\r\n  background: ${(props) =>\r\n    useColorProp(\r\n      props.colors.cardBackground,\r\n      props.colors.cardColors[props.lectureColor]\r\n    )};\r\n  color: black;\r\n  display: flex;\r\n  flex-direction: row;\r\n  border-radius: ${(props) => props.colors.cardBorderRadius || `2px`};\r\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\r\n  text-shadow: -1px 1px 3px rgba(0, 0, 0, 0.3);\r\n  color: ${(props) =>\r\n    useColorProp(\r\n      props.colors.cardTextColor,\r\n      props.colors.cardColors[props.lectureColor]\r\n    )};\r\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  overflow: hidden;\r\n\r\n  border: ${(props) =>\r\n    props.colors.cardBorder &&\r\n    useColorProp(\r\n      props.colors.cardBorder,\r\n      props.colors.cardColors[props.lectureColor]\r\n    )};\r\n\r\n  margin: 5px;\r\n\r\n  &:hover {\r\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.25), 0 6px 6px rgba(0, 0, 0, 0.22);\r\n    margin: 3px;\r\n  }\r\n`;\r\n\r\nconst StyledLectureBody = styled.div`\r\n  height: 100%;\r\n  width: 80%;\r\n  padding: 10px;\r\n\r\n  @media only screen and (max-width: 680px) {\r\n    height: 100%;\r\n    padding: 3px !important;\r\n    width: 90% !important;\r\n    overflow-wrap: break-word !important;\r\n  }\r\n`;\r\n\r\nconst StyledLectureType = styled.div`\r\n  height: 100%;\r\n  width: 20%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: ${(props) => {\r\n    const background = props.colors.cardTypeBackground\r\n      ? useColorProp(\r\n          props.colors.cardTypeBackground,\r\n          props.colors.cardColors[props.lectureColor]\r\n        )\r\n        : props.colors.cardColors[props.lectureColor];\r\n    let out = \"\";\r\n    if (props.colors.cardTypeBackground) {\r\n      out = background;\r\n    } else {\r\n      try {\r\n        out = LightenDarkenColor(background, -10);\r\n      } catch (e) {\r\n        out = background;\r\n      }\r\n    }\r\n    return out;\r\n  }};\r\n  position: relative;\r\n  ${(props) =>\r\n    props.colors.cardTypeTextColor\r\n      ? `color:${props.colors.cardTypeTextColor};`\r\n      : ``}\r\n\r\n  @media only screen and (max-width: 680px) {\r\n    width: 100% !important;\r\n    height: 20% !important;\r\n  }\r\n`;\r\n\r\nconst StyledLectureWrapper = styled.div`\r\n  //padding:5px;\r\n  display: flex;\r\n  position: absolute;\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n\r\n  transition: opacity 0.5s;\r\n\r\n  ${(props) =>\r\n    props.hidden\r\n      ? props.selecting\r\n        ? css`\r\n            &:hover {\r\n              cursor: pointer;\r\n            }\r\n\r\n            opacity: 0.3;\r\n          `\r\n        : css`\r\n            pointer-events: none;\r\n            opacity: 0;\r\n          `\r\n      : css`\r\n          &:hover {\r\n            cursor: pointer;\r\n          }\r\n          opacity: 1;\r\n        `}\r\n  @media only screen and (max-width: 680px) {\r\n    div {\r\n      flex-direction: column !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst SmallField = styled.div`\r\n  font-size: 0.6em;\r\n`;\r\n\r\nconst CardTitle = styled.div`\r\n  @media only screen and (max-width: 680px) {\r\n    font-size: 13px !important;\r\n  }\r\n`;\r\n\r\nconst TimetableStyle = createGlobalStyle`\r\n  .styles_day_title__1y-BE {\r\n    background: ${(props) => props.topBar};\r\n  }\r\n\r\n  .styles_hour__EXCif {\r\n    background:${(props) => props.sideBar};\r\n  }\r\n\r\n  .styles_day__1cspH {\r\n    background-color: ${(props) => props.backgroundColor};\r\n    background-image: linear-gradient(${(props) =>\r\n      props.backgroundAccentColor} 50%, transparent 50%);\r\n  }\r\n\r\n  .styles_time_table_wrapper__1-rtp{\r\n    color:${(props) => props.tableTextColor}\r\n  }\r\n`;\r\n\r\nconst renderEvent = (\r\n  event,\r\n  defaultAttributes,\r\n  styles,\r\n  colors,\r\n  selecting,\r\n  setLessonFilter,\r\n  setSelecting\r\n) => {\r\n  defaultAttributes.className = \"\";\r\n  const [selectedName, selectedType] = selecting ? selecting.split(\"$\") : [];\r\n  return (\r\n    <StyledLectureWrapper\r\n      {...defaultAttributes}\r\n      title={event.name}\r\n      key={event.id}\r\n      selecting={\r\n        selectedName === event.abbr && event.type.indexOf(selectedType) != -1\r\n      }\r\n      hidden={event.hidden}\r\n      onClick={() => {\r\n        if (\r\n          selectedName === event.abbr &&\r\n          event.type.indexOf(selectedType) != -1\r\n        ) {\r\n          const a = {\r\n            [selecting]: { dan: event.dan, ura: event.ura },\r\n          };\r\n          console.log(a);\r\n          setLessonFilter(a);\r\n          setSelecting(false);\r\n        }\r\n      }}\r\n    >\r\n      <StyledLecture\r\n        lectureColor={event.color}\r\n        type={event.type}\r\n        colors={colors}\r\n      >\r\n        <StyledLectureBody>\r\n          <CardTitle style={{ fontWeight: `bold` }}>\r\n            {window.innerWidth > 680 ? event.name : event.abbr}\r\n          </CardTitle>\r\n          <SmallField>{event.professor}</SmallField>\r\n          <SmallField>{event.class}</SmallField>\r\n          <SmallField>\r\n            {event.startTime.format(\"HH:mm\")} - {event.endTime.format(\"HH:mm\")}\r\n          </SmallField>\r\n        </StyledLectureBody>\r\n        <StyledLectureType\r\n          type={event.type}\r\n          lectureColor={event.color}\r\n          colors={colors}\r\n        >\r\n          {event.type}\r\n        </StyledLectureType>\r\n      </StyledLecture>\r\n    </StyledLectureWrapper>\r\n  );\r\n};\r\n\r\nexport default ({ timeInterval, tableData }) => {\r\n  const colors = React.useContext(ColorContext);\r\n  const lessonFilterData = React.useContext(LessonFilterData);\r\n  const lessonFilterManager = React.useContext(LessonFilterManager);\r\n  return (\r\n    <>\r\n      <TimetableStyle {...colors} />\r\n      <Timetable\r\n        hoursInterval={timeInterval}\r\n        renderEvent={(e, d, s) =>\r\n          renderEvent(\r\n            e, // event\r\n            d, // defaultAttributes\r\n            s, // styles\r\n            colors,\r\n            lessonFilterData.selecting,\r\n            lessonFilterManager.setLessonFilter,\r\n            lessonFilterManager.setSelecting\r\n          )\r\n        }\r\n        events={tableData}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useRef, useState } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst MainButtonWrapper = styled.div`\r\n  position: relative;\r\n  transition: box-shadow 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n`;\r\n\r\nconst MainInnerButtonWrapper = styled.div`\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst ShadowWrapper = styled.div`\r\n  position: relative;\r\n  z-index: 150;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    z-index: -1;\r\n    border-radius: 3px;\r\n    ${(props) =>\r\n      props.open &&\r\n      css`\r\n        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.25),\r\n          0 6px 6px rgba(0, 0, 0, 0.22);\r\n      `}\r\n  }\r\n`;\r\n\r\nconst DropdownBody = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: ${(props) => props.height};\r\n\r\n  z-index: 150;\r\n  overflow: hidden;\r\n\r\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n`;\r\n\r\nconst DropdownInnerList = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  border-radius: 0 0 3px 3px;\r\n`;\r\n\r\nfunction childOf(c, p) {\r\n  while ((c = c.parentNode) && c !== p);\r\n  return !!c;\r\n}\r\n\r\n/**\r\n * @typedef {object} Props\r\n * @prop {object} ButtonElement optional\r\n * @prop {object} ListElement optional\r\n * @prop {function} onSelect\r\n * @prop {Array<object>} values\r\n */\r\nexport default ({\r\n  ButtonElement,\r\n  ListElement,\r\n  onSelect,\r\n  values,\r\n  dropDownInnerListStyle,\r\n  onOpen,\r\n  style,\r\n}) => {\r\n  const [open, setOpen] = useState();\r\n  const dropDownBodyRef = useRef();\r\n  const mainButtonWrapperRef = useRef();\r\n  const dropdownInnerListRef = useRef();\r\n\r\n  const closeDropdown = (event) => {\r\n    if (\r\n      !(\r\n        childOf(event.target, dropDownBodyRef.current) ||\r\n        childOf(event.target, mainButtonWrapperRef.current)\r\n      )\r\n    ) {\r\n      setOpen(false);\r\n      document.removeEventListener(\"click\", closeDropdown);\r\n    }\r\n  };\r\n\r\n  const toggle = (event) => {\r\n    if (!childOf(event.target, dropDownBodyRef.current)) {\r\n      if (!open) {\r\n        if (onOpen) onOpen();\r\n        document.addEventListener(\"click\", closeDropdown);\r\n      } else {\r\n        document.removeEventListener(\"click\", closeDropdown);\r\n      }\r\n      console.log(\"new state:\", !open);\r\n      setOpen(!open);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainButtonWrapper\r\n      open={open}\r\n      onClick={toggle}\r\n      ref={mainButtonWrapperRef}\r\n      style={style}\r\n    >\r\n      <ShadowWrapper open={open}>\r\n        <MainInnerButtonWrapper open={open}>\r\n          <ButtonElement />\r\n        </MainInnerButtonWrapper>\r\n        <DropdownBody\r\n          open={open}\r\n          marginTop={\r\n            mainButtonWrapperRef.current &&\r\n            mainButtonWrapperRef.current.offsetHeight + \"px\"\r\n          }\r\n          ref={dropDownBodyRef}\r\n          height={\r\n            !open\r\n              ? 0\r\n              : dropdownInnerListRef.current &&\r\n                dropdownInnerListRef.current.offsetHeight + \"px\"\r\n          }\r\n        >\r\n          <DropdownInnerList\r\n            ref={dropdownInnerListRef}\r\n            style={dropDownInnerListStyle}\r\n          >\r\n            {values &&\r\n              values.map((props, key) => (\r\n                <ListElement\r\n                  index={key}\r\n                  key={`${key}_dropdown`}\r\n                  element={props}\r\n                  open={open}\r\n                  onClick={(event) => onSelect(props, event)}\r\n                />\r\n              ))}\r\n          </DropdownInnerList>\r\n        </DropdownBody>\r\n      </ShadowWrapper>\r\n    </MainButtonWrapper>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport colorSchemes, { ColorContext } from \"../util/colorSchemes\";\r\n\r\nconst getColorScheme = (name) => handleImports(name, colorSchemes[name]);\r\n\r\nconst handleImports = (name, scheme) => {\r\n  let out = Object.assign({}, scheme);\r\n  if (out.importStyle) {\r\n    const import1 = out.importStyle;\r\n    delete out[\"importStyle\"];\r\n    if (import1 in colorSchemes)\r\n      out = Object.assign({}, colorSchemes[import1], out);\r\n    else throw new Error(`Error at import, ${name} tried to import ${import1}`);\r\n\r\n    return handleImports(import1, out);\r\n  } else {\r\n    return out;\r\n  }\r\n};\r\n\r\nexport const ColorSchemeChangerContext = React.createContext({\r\n  allNames: [],\r\n  colorSchemeName: `context not loaded`,\r\n  setColorScheme: () => console.log(`context not loaded`),\r\n  setColorSchemePreview: () => console.log(`context not loaded`),\r\n  resetColorSchemePreview: () => console.log(`context not loaded`),\r\n});\r\n\r\nexport default ({ Component, ...props }) => {\r\n  const [colorSchemeName, setColorSchemeName] = useState(\r\n    localStorage.getItem(\"colorScheme\") || `monokaiProWithColorText`\r\n  );\r\n\r\n  const [tempSchemeName, setTempSchemeName] = useState();\r\n\r\n  const setColorSchemePreview = (name) => {\r\n    setTempSchemeName(name);\r\n  };\r\n\r\n  const resetColorSchemePreview = () => {\r\n    setTempSchemeName(null);\r\n  };\r\n\r\n  const setColorScheme = (name, save) => {\r\n    if (save) {\r\n      localStorage.setItem(\"colorScheme\", name);\r\n    }\r\n    setColorSchemeName(name);\r\n    resetColorSchemePreview();\r\n  };\r\n\r\n  return (\r\n    <ColorContext.Provider\r\n      value={getColorScheme(tempSchemeName || colorSchemeName)}\r\n    >\r\n      <ColorSchemeChangerContext.Provider\r\n        value={{\r\n          allNames: Object.keys(colorSchemes),\r\n          colorSchemeName,\r\n          setColorScheme,\r\n          setColorSchemePreview,\r\n          resetColorSchemePreview,\r\n        }}\r\n      >\r\n        <Component\r\n          setColorSchemeName={(name) => setColorSchemeName(name)}\r\n          {...props}\r\n        />\r\n      </ColorSchemeChangerContext.Provider>\r\n    </ColorContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { HiDotsVertical } from \"react-icons/hi\";\r\nimport styled, { css } from \"styled-components\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport { ColorContext } from \"../util/colorSchemes\";\r\nimport { ColorSchemeChangerContext } from \"./ColorSchemeHandler\";\r\n\r\nimport { LessonFilterManager } from \"./LessonFilterHandler\";\r\n\r\nconst TopMenuBar = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n\r\n  height: ${(props) => props.rowHeight}vh;\r\n  width: ${(props) => (props.expanded ? `100vw` : `1.5em`)};\r\n\r\n  background: ${(props) => props.background};\r\n\r\n  transition: 1s cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  display: flex;\r\n  align-items: flex-start;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst TopMenuBarContent = styled.div`\r\n  flex-grow: 1;\r\n  flex-shrink: 1;\r\n  display: flex;\r\n  flex-direction: row;\r\n  overflow-x: hidden;\r\n`;\r\n\r\nconst ExpandButton = styled.div`\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n  height: ${(props) => props.rowHeight}vh;\r\n  width: 1.5em;\r\n  z-index: 900;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\n// BUTTONS styles\r\nconst DropdownButton = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: all 1s;\r\n\r\n  height: ${(props) => props.rowHeight}vh;\r\n  width: 300px;\r\n  background: ${(props) => props.background};\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background: rgba(255, 255, 255, 0.1);\r\n  }\r\n`;\r\n\r\nconst DropDownElement = styled.div`\r\n  padding: 1em;\r\n\r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.1);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n// BUTTONS styles\r\n\r\nexport default ({ rowHeight, duplicateLectures }) => {\r\n  const [expanded, setExpanded] = useState();\r\n  const colors = React.useContext(ColorContext);\r\n  const colorSchemeChanger = React.useContext(ColorSchemeChangerContext);\r\n  const lessonFilterManager = React.useContext(LessonFilterManager);\r\n\r\n  const backgroundColor = colors.topMenuColor\r\n    ? colors.topMenuColor\r\n    : colors.topBar;\r\n\r\n  const buttons = [\r\n    () => {\r\n      return (\r\n        <Dropdown\r\n          key={`button1`}\r\n          style={{ marginLeft: `1em` }}\r\n          ButtonElement={() => (\r\n            <DropdownButton\r\n              background={backgroundColor}\r\n              colors={colors}\r\n              rowHeight={rowHeight}\r\n            >\r\n              Theme: {colorSchemeChanger.colorSchemeName || `undefined`}\r\n            </DropdownButton>\r\n          )}\r\n          values={colorSchemeChanger.allNames.map((n) => ({ name: n }))}\r\n          ListElement={({ element, open, onClick, index }) => (\r\n            <DropDownElement\r\n              onClick={onClick}\r\n              key={`${index}_dropdown_element`}\r\n              onMouseEnter={() => {\r\n                if (open)\r\n                  colorSchemeChanger.setColorSchemePreview(element.name);\r\n              }}\r\n              onMouseLeave={() => {\r\n                if (open) colorSchemeChanger.resetColorSchemePreview();\r\n              }}\r\n            >\r\n              {element.name}\r\n            </DropDownElement>\r\n          )}\r\n          onSelect={({ name }) => {\r\n            colorSchemeChanger.setColorScheme(name, true);\r\n          }}\r\n          dropDownInnerListStyle={{\r\n            background: backgroundColor,\r\n          }}\r\n        />\r\n      );\r\n    },\r\n    () => (\r\n      <Dropdown\r\n        key={`button2`}\r\n        style={{ marginLeft: `1em` }}\r\n        ButtonElement={() => (\r\n          <DropdownButton\r\n            background={backgroundColor}\r\n            colors={colors}\r\n            rowHeight={rowHeight}\r\n          >\r\n            Select class terms\r\n          </DropdownButton>\r\n        )}\r\n        values={duplicateLectures}\r\n        ListElement={({ element, onClick }) => (\r\n          <DropDownElement onClick={onClick}>{element}</DropDownElement>\r\n        )}\r\n        onSelect={(elem) => {\r\n          lessonFilterManager.setSelecting(elem);\r\n        }}\r\n        dropDownInnerListStyle={{\r\n          background: backgroundColor,\r\n        }}\r\n      />\r\n    ),\r\n  ].map((f) => f());\r\n\r\n  return (\r\n    <TopMenuBar\r\n      expanded={expanded}\r\n      colors={colors}\r\n      rowHeight={rowHeight}\r\n      background={backgroundColor}\r\n    >\r\n      <ExpandButton\r\n        onClick={() => {\r\n          setExpanded(!expanded);\r\n          //setColorSchemeName(`monokaiProWithColorText`);\r\n        }}\r\n        rowHeight={rowHeight}\r\n      >\r\n        <HiDotsVertical />\r\n      </ExpandButton>\r\n      <TopMenuBarContent>{buttons}</TopMenuBarContent>\r\n    </TopMenuBar>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport round from \"lodash/round\";\r\n\r\nimport { fetchTableData } from \"./util/api.js\";\r\nimport {\r\n  apiToTimetableData,\r\n  downloadIcs,\r\n  getTimeRange,\r\n  findDuplicateLectures,\r\n  filterApiData,\r\n  markHiddenApiData,\r\n} from \"./util/tableDataUtil.js\";\r\n\r\n// components\r\nimport LoadingScreen from \"./components/LoadingScreen.jsx\";\r\nimport FullscreenError from \"./components/FullscreenError.jsx\";\r\nimport CustomTimetable from \"./components/CustomTimetable.jsx\";\r\nimport TopExpandableBar from \"./components/TopExpandableBar.jsx\";\r\n\r\nimport { ColorContext } from \"./util/colorSchemes\";\r\nimport {\r\n  LessonFilterData,\r\n  LessonFilterManager,\r\n} from \"./components/LessonFilterHandler\";\r\n\r\n// resources\r\nimport { HiDownload } from \"react-icons/hi\";\r\n\r\n// google analytics\r\nimport ReactGA from \"react-ga\";\r\n\r\n//TOP BAR\r\nconst topButtons = [\r\n  {\r\n    name: \"Download\",\r\n    icon: HiDownload,\r\n    onClick: () => {\r\n      //if (tableData) downloadIcs(tableData);\r\n    },\r\n  },\r\n];\r\n//TOP BAR\r\n\r\nconst Wrapper = styled.div`\r\n  background: ${(props) => props.colors.backgroundColor};\r\n  color: white;\r\n`;\r\n\r\nconst getRowHeight = (timeInterval = [8, 20]) => {\r\n  let numberOfRows = timeInterval[1] - timeInterval[0] + 1;\r\n  return round(100 / numberOfRows, 5);\r\n};\r\n\r\n/**\r\n * A custom useEffect hook that only triggers on updates, not on initial mount\r\n * Idea stolen from: https://stackoverflow.com/a/55075818/1526448\r\n * @param {Function} effect\r\n * @param {Array<any>} dependencies\r\n */\r\nfunction useUpdateEffect(effect, dependencies = []) {\r\n  const isInitialMount = React.useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (isInitialMount.current) {\r\n      isInitialMount.current = false;\r\n    } else {\r\n      effect();\r\n    }\r\n  }, dependencies);\r\n}\r\n\r\nconst App = ({ lessonFilter }) => {\r\n  const [tableDataAndInterval, setTableDataAndInterval] = useState();\r\n  const [error, setError] = useState();\r\n  const [timetableData, setTimetableData] = useState();\r\n  const [duplicates, setDuplicates] = useState();\r\n  const colors = React.useContext(ColorContext);\r\n  const lessonFilterData = React.useContext(LessonFilterData);\r\n\r\n  // fetch the data\r\n  useEffect(() => {\r\n    const fetchPromise = fetchTableData();\r\n\r\n    fetchPromise.then((response) => {\r\n      if (response.ok) {\r\n        response.json().then((data) => {\r\n          setTableDataAndInterval({\r\n            tableData: data,\r\n            timeInterval: getTimeRange(data),\r\n          });\r\n          setDuplicates(findDuplicateLectures(data));\r\n        });\r\n      } else {\r\n        console.error(response);\r\n        setError(response.status + \": \" + response.statusText);\r\n      }\r\n    });\r\n\r\n    fetchPromise.catch((e) => {\r\n      setError(e.toString());\r\n    });\r\n\r\n    ReactGA.initialize(\"G-48HEFNVSMF\");\r\n  }, []);\r\n\r\n  const loaded = !!timetableData;\r\n\r\n  useUpdateEffect(() => {\r\n    console.log(lessonFilterData.selecting);\r\n    //force update if lessonFilter has been updated\r\n    const newData = apiToTimetableData(\r\n      markHiddenApiData(\r\n        tableDataAndInterval.tableData,\r\n        lessonFilter,\r\n        lessonFilterData.selecting\r\n      )\r\n    );\r\n\r\n    if (newData) setTimetableData(newData);\r\n    else setError(\"data calculation error\");\r\n  }, [lessonFilter, lessonFilterData.selecting]);\r\n\r\n  // convert data to a format that Timetable can understand\r\n  if (tableDataAndInterval && !error && !timetableData) {\r\n    const newData = apiToTimetableData(\r\n      filterApiData(tableDataAndInterval.tableData, lessonFilter)\r\n    );\r\n    if (newData) setTimetableData(newData);\r\n    else setError(\"data calculation error\");\r\n  }\r\n\r\n  return (\r\n    <Wrapper colors={colors}>\r\n      <LoadingScreen\r\n        error={error}\r\n        loaded={loaded}\r\n        rowHeight={getRowHeight(\r\n          tableDataAndInterval ? tableDataAndInterval.timeInterval : [8, 20]\r\n        )}\r\n      />\r\n      {error && <FullscreenError error={error} />}\r\n      {tableDataAndInterval && (\r\n        <>\r\n          <CustomTimetable\r\n            //lessonFilter={lessonFilter}\r\n            timeInterval={tableDataAndInterval.timeInterval}\r\n            tableData={timetableData}\r\n          />\r\n          <TopExpandableBar\r\n            duplicateLectures={duplicates}\r\n            rowHeight={getRowHeight(tableDataAndInterval.timeInterval)}\r\n            buttons={topButtons}\r\n          />\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export const fetchTableData = () =>\r\n  fetch(\r\n    window.location.href.indexOf(\"?url=\") == -1\r\n      ? \"https://yon.si/urnik.php\"\r\n      : window.location.href.split(\"?url=\")[1].split(\"&\")[0],\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        // 'Content-Type': 'application/x-www-form-urlencoded',\r\n      },\r\n    }\r\n  );\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport ColorSchemeHandler from \"./components/ColorSchemeHandler\";\r\nimport LessonFilterHandler from \"./components/LessonFilterHandler\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <LessonFilterHandler\r\n      Component={(props) => <ColorSchemeHandler {...props} Component={App} />}\r\n    />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}