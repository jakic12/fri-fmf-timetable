{"version":3,"sources":["exportToLocal.js","App.js","serviceWorker.js","index.js"],"names":["wrapEventStringData","stringData","formatDateTime","date","year","getUTCFullYear","month","pad","getUTCMonth","day","getUTCDate","hour","getUTCHours","minute","getUTCMinutes","second","getUTCSeconds","i","formatTime","dan","ura","h","date1","Date","setTime","getTime","addHours","days","setDate","getDate","addDays","getStringEvents","data","out","startDate","d","getDay","diff","getMonday","forEach","element","predmet","abbr","tip","Intl","DateTimeFormat","resolvedOptions","timeZone","trajanje","name","ucilnica","profesor","LoadingDiv","styled","div","props","loaded","SideLoading","TopLoading","getRowHeight","Wrapper","LectureColors","StyledLecture","lectureId","StyledLectureBody","StyledLectureType","LightenDarkenColor","StyledLectureWrapper","SmallField","ErrorWrapper","ErrorCard","padTo2","num","slice","SettingsButton","renderEvent","event","defaultAttributes","styles","className","title","key","id","type","style","fontWeight","professor","class","startTime","format","endTime","timeInterval","numberOfRows","round","App","useState","tableData","setTableData","error","setError","url","window","location","href","indexOf","split","useEffect","fetchPromise","fetch","method","mode","credentials","headers","referrerPolicy","then","response","ok","console","log","json","status","statusText","catch","e","tableDataConverted","monday","tuesday","wednesday","thursday","friday","DAYS","elementCount","lectures","el","push","moment","onClick","string","document","createElement","file","Blob","URL","createObjectURL","download","body","appendChild","click","downloadIcs","hoursInterval","events","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e1b8e15c.chunk.js","sourcesContent":["export default (data) => wrapEventStringData(getStringEvents(data));\n\nconst wrapEventStringData = stringData => \n`BEGIN:VCALENDAR\nVERSION:1.0\nPRODID:-//Homemade Urnik ISRM\n${stringData}\nEND:VCALENDAR`;\n\nfunction getMonday(d) {\n  d = new Date(d);\n  var day = d.getDay(),\n      diff = d.getDate() - day + (day == 0 ? -6:1); // adjust when day is sunday\n  return new Date(d.setDate(diff));\n}\n\nfunction addDays(date1, days) {\n  var date = new Date(date1);\n  date.setDate(date.getDate() + days);\n  return date;\n}\n\nfunction addHours(date, h) {\n  const date1 = new Date(date);\n  date1.setTime(date1.getTime() + (h*60*60*1000));\n  return date1;\n}\n\nfunction formatDateTime(date) {\n  const year = date.getUTCFullYear();\n  const month = pad(date.getUTCMonth() + 1);\n  const day = pad(date.getUTCDate());\n  const hour = pad(date.getUTCHours());\n  const minute = pad(date.getUTCMinutes());\n  const second = pad(date.getUTCSeconds());\n  return `${year}${month}${day}T${hour}${minute}${second}Z`;\n}\n\nfunction pad(i) {\n  return i < 10 ? `0${i}` : `${i}`;\n}\n\nconst formatTime = (date, dan, ura) => formatDateTime(addHours(addDays(date, dan), ura));\n\nconst getStringEvents = data => {\n  let out = ``;\n  const startDate = getMonday(new Date());\n\n  data.forEach(element => {\n    out += `BEGIN:VEVENT\nSUMMARY:${element.predmet.abbr} - ${element.tip}\nDTSTART;TZID=${Intl.DateTimeFormat().resolvedOptions().timeZone};VALUE=DATE-TIME:${formatTime(startDate, element.dan, element.ura)}\nDTEND;TZID=${Intl.DateTimeFormat().resolvedOptions().timeZone};VALUE=DATE-TIME:${formatTime(startDate, element.dan, element.ura + element.trajanje)}\nDTSTAMP;VALUE=DATE-TIME:${formatDateTime(new Date())}\nUID:homemade_urnik_fri_fmf\nRRULE:FREQ=WEEKLY;UNTIL=20211013T000000;WKST=MO\nDESCRIPTION:${element.predmet.name} @ ${element.ucilnica}\\\\n${element.profesor}\nLOCATION:${element.ucilnica}\nEND:VEVENT\\n`;\n  })\n\n  return out;\n}\n\n","import React, { useState, useEffect } from \"react\";\nimport {PuffLoader} from \"react-spinners\";\nimport exportToLocal from \"./exportToLocal.js\";\nimport styled from \"styled-components\";\nimport moment from 'moment';\nimport \"./App.css\";\nimport { HiDownload } from 'react-icons/hi';\n\nimport Timetable from 'react-timetable-events'\nimport round from 'lodash/round'\nimport { LightenDarkenColor } from 'lighten-darken-color'; \n\n\nconst LoadingDiv = styled.div`\n  width:100vw;\n  height:100vh;\n  display:flex;\n  position:absolute;\n  align-items:center;\n  justify-content:center;\n  background:white;\n\n  opacity:${props => props.loaded? 0 : 1};\n  transition: all .6s ;\n  transition-delay: .8s;\n\n  z-index:1000;\n\n  pointer-events:none;\n`;\n\nconst SideLoading = styled.div`\n  background:#46596b;\n  width:${props => props.loaded? \"5rem\" : \"100vw\"};\n  transition: all .4s cubic-bezier(.25,.8,.25,1);\n  transition-delay: .4s;\n  \n  position:absolute;\n  left:0;\n  top:0;\n  height:100vh;\n  `;\n\nconst TopLoading = styled.div`\n  background:#34495d;\n  width:100vw;\n  position:absolute;\n  left:0;\n  top:0;\n\n  height:${props => props.loaded? `${getRowHeight()}vh` : \"100vh\"};\n  transition: all .4s cubic-bezier(.25,.8,.25,1);\n`;\n\n\nconst Wrapper = styled.div`\n  background:#34495d;\n  color:white;\n`;\n\nconst LectureColors = [\n  \"#e74c3c\",\n  \"#3498db\",\n  \"#2ecc71\",\n  \"#f1c40f\",\n  \"#9b59b6\",\n  \"#1abc9c\",\n  \"#e67e22\",\n  \"#34495e\"\n];\n\nconst StyledLecture = styled.div`\n  width:100%;\n  background:${props => LectureColors[props.lectureId]};\n  color:black;\n  display:flex;\n  flex-direction:row;\n  border-radius:2px;\n  box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n  text-shadow: -1px 1px 3px rgba(0, 0, 0, .3);\n  color: white;\n  transition: all 0.3s cubic-bezier(.25,.8,.25,1);\n  overflow:hidden;\n\n  margin:5px;\n\n  &:hover{\n    box-shadow: 0 10px 20px rgba(0,0,0,0.25), 0 6px 6px rgba(0,0,0,0.22);\n    margin:3px;\n  }\n`;\n\nconst StyledLectureBody = styled.div`\n  height:100%;\n  width:80%;\n  padding:10px;\n`;\n\nconst StyledLectureType = styled.div`\n  height:100%;\n  width:20%;\n  display:flex;\n  flex-direction:column;\n  justify-content:center;\n  align-items:center;\n  background: ${props => LightenDarkenColor(LectureColors[props.lectureId], -10)};\n  position:relative;\n`;\n\nconst StyledLectureWrapper = styled.div`\n  //padding:5px;\n  display:flex;\n  position:absolute;\n  box-sizing:border-box;\n  width:100%;\n`;\n\nconst SmallField = styled.div`\n  font-size:.6em;\n`;\n\nconst ErrorWrapper = styled.div`\n  width:100vw;\n  height:100vh;\n\n  display:flex;\n  justify-content:center;\n  align-items:center;\n`;\n\nconst ErrorCard = styled.div`\n  background:#e74c3c;\n  border-radius:2px;\n  padding:10px;\n`;\nconst padTo2 = (num) => ('00' + num).slice(-2) \n\nconst SettingsButton = styled.div`\n  position:absolute;\n  right:0;\n  top:0;\n\n  height:${props => getRowHeight()}vh;\n  width:${props => getRowHeight()}vh;\n  z-index:900;\n  display:flex;\n  align-items:center;\n  justify-content:center;\n\n  &:hover{\n    cursor:pointer;\n  }\n`;\n\nconst downloadIcs= (string) =>{\n  const element = document.createElement(\"a\");\n   const file = new Blob([string],    \n               {type: 'text/plain;charset=utf-8'});\n   element.href = URL.createObjectURL(file);\n   element.download = \"calendar.ics\";\n   document.body.appendChild(element);\n   element.click();\n}\n\nconst renderEvent = (event, defaultAttributes, styles) => {\n  defaultAttributes.className = \"\";\n  return (\n    <StyledLectureWrapper {...defaultAttributes}\n    title={event.name}\n    key={event.id}>\n      <StyledLecture lectureId={event.lectureId} type={event.type} >\n              <StyledLectureBody >\n                <div style={{fontWeight:`bold`}}>{ event.name }</div>\n                <SmallField>{event.professor}</SmallField>\n                <SmallField>{event.class}</SmallField>\n                <SmallField>\n                  { event.startTime.format('HH:mm') } - { event.endTime.format('HH:mm') }\n                </SmallField>\n             </StyledLectureBody>\n             <StyledLectureType type={event.type} lectureId={event.lectureId}>\n               {event.type}\n             </StyledLectureType>\n\n      </StyledLecture>\n    </StyledLectureWrapper>\n  )\n}\n\nfunction App() {\n  const [tableData, setTableData] = useState(false);\n  const [error, setError] = useState(false);\n  const url =\n    window.location.href.indexOf(\"?url=\") == -1\n      ? \"https://fmf-fri-timetable-scraper.herokuapp.com/getUrnik\"\n      : window.location.href.split(\"?url=\")[1];\n\n  useEffect(() => {\n    const fetchPromise = fetch(\"https://cors-anywhere.herokuapp.com/\" + url, {\n      method: 'GET',\n      mode: 'cors',\n      credentials: 'same-origin',\n      headers: {\n        'Content-Type': 'application/json'\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      referrerPolicy: 'no-referrer',\n    })\n    \n    fetchPromise.then(response => {\n      if(response.ok){\n        console.log(\"ok\");\n        response.json().then(data => {\n            setTableData(data);\n          })\n      }else{\n        console.log(\"not ok\", response)\n        setError(response.status + \": \" + response.statusText)\n      }\n        \n      })\n\n    fetchPromise.catch(e => {\n      setError(e);\n    })\n      \n  }, [])\n\n  const loaded = !!tableData;\n\n  const tableDataConverted = {\n      monday: [],\n      tuesday: [],\n      wednesday: [],\n      thursday: [],\n      friday: []\n    \n  };\n\n  const DAYS = [\n    \"monday\",\n    \"tuesday\",\n    \"wednesday\",\n    \"thursday\",\n    \"friday\"\n  ]\n\n  const elementCount = {};\n  DAYS.forEach(d => elementCount[d] = 1);\n\n  const lectures = [];\n  if(loaded && !error) \n    tableData.forEach(el => {\n      if(lectures.indexOf(el.predmet.abbr) == -1)\n        lectures.push(el.predmet.abbr);\n\n      tableDataConverted[DAYS[el.dan]].push({\n        id:elementCount[DAYS[el.dan]]++,\n        name:el.predmet.name,\n        professor: el.profesor,\n        class: el.ucilnica,\n        type:el.tip,\n        lectureId: lectures.indexOf(el.predmet.abbr),\n        startTime:moment(\"2019-02-23T\" + padTo2(el.ura) + \":00:00\"),\n        endTime:moment(\"2019-02-23T\" + ('00' + padTo2(el.ura + el.trajanje)).slice(-2) + \":00:00\")\n      })\n    })\n\n  console.log(error);\n    \n  return <Wrapper>\n    <SettingsButton onClick={() => {\n      if(tableData)\n        downloadIcs(exportToLocal(tableData))\n    }}>\n      <HiDownload />\n    </SettingsButton>\n    <LoadingDiv loaded={loaded || !!error}>\n      <SideLoading loaded={loaded}></SideLoading>\n      <TopLoading loaded={loaded}></TopLoading>\n      <PuffLoader  />\n    </LoadingDiv>\n    {error && <ErrorWrapper>\n      <ErrorCard>{error}</ErrorCard>\n      </ErrorWrapper>}\n    {loaded && <Timetable hoursInterval = {timeInterval} renderEvent={renderEvent} events={tableDataConverted}/>}\n  </Wrapper>;\n}\nconst timeInterval = [8, 20]\n\nconst getRowHeight = () => {\n  let numberOfRows =\n  timeInterval[1] - timeInterval[0] + 1\n\n  return round((100 / numberOfRows), 5)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}